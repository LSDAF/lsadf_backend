/*
 * Copyright Â© 2024-2025 LSDAF
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.lsadf.core.infra.persistence.game.stage;

import com.lsadf.core.domain.game.stage.Stage;
import com.lsadf.core.infra.persistence.EntityModelMapper;
import org.mapstruct.Mapper;
import org.mapstruct.factory.Mappers;

/**
 * An interface that defines the mapping between {@link StageEntity} and {@link Stage}.
 *
 * <p>Extends the {@link EntityModelMapper} interface, which provides a contract for converting an
 * entity of type {@code StageEntity} to its corresponding model of type {@code Stage}. This is part
 * of an entity-to-model mapping strategy, improving modularity and separation of concerns between
 * data persistence and domain logic layers.
 *
 * <p>The mapper implementation for this interface is automatically generated by MapStruct. The
 * instance of this mapper can be accessed using {@code StageEntityMapper.INSTANCE}.
 *
 * <p>Usage of this mapper ensures consistent and reusable transformation logic between the
 * persistence-layer representation of a stage and its domain-layer representation.
 */
@Mapper
public interface StageEntityMapper extends EntityModelMapper<StageEntity, Stage> {
  StageEntityMapper INSTANCE = Mappers.getMapper(StageEntityMapper.class);

  /** {@inheritDoc} */
  @Override
  Stage map(StageEntity stageEntity);
}
