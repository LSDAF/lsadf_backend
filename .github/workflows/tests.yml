name: 🧑‍🔬 Run tests

run-name: ${{ github.head_ref || github.ref_name }}-run-tests

on:
  pull_request:
  workflow_dispatch:


concurrency:
  group: run-tests-${{ github.event.number }}
  cancel-in-progress: true


jobs:
  unit-test:
    name: "🧪 Run Unit Tests"
    runs-on: 'ubuntu-22.04'
    timeout-minutes: 10 # The overall timeout
    permissions:
      actions: write
      checks: write
      contents: write
      pull-requests: write
      statuses: write

    steps:
      # Set Timezone to Europe/Paris
      - name: Set Timezone
        uses: szenius/set-timezone@v2.0
        with:
          timezoneLinux: 'Europe/Paris'

      # checkout your repository
      - name: 📥 Checkout
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: 📦 Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: 🚧 Install
        run: |
          make install-ci

      - name: 🧪 Test with Maven
        run: |
          make test-ci

      - name: Generate Report
        run: |
          make report

      - name: 📁 List Surefire reports
        run: |
          ls -la lsadf_admin/target/surefire-reports
          ls -la lsadf_api/target/surefire-reports
          ls -la lsadf_core/target/surefire-reports
        if: always()

      - name: 📁 List Failsafe reports
        run: |
          ls -la lsadf_admin/target/failsafe-reports
          ls -la lsadf_api/target/failsafe-reports
          ls -la lsadf_core/target/failsafe-reports
        if: always()

      - name: 📝 Tests Summary
        uses: test-summary/action@v2
        with:
          paths: |
            lsadf_admin/target/surefire-reports/TEST-*.xml
            lsadf_admin/target/failsafe-reports/TEST-*.xml
            lsadf_api/target/surefire-reports/TEST-*.xml
            lsadf_api/target/failsafe-reports/TEST-*.xml
            lsadf_core/target/surefire-reports/TEST-*.xml
            lsadf_core/target/failsafe-reports/TEST-*.xml
          show: fail, skip
          output: test-summary.md
        if: always()

      - name: 📤 Upload Test Summary
        uses: actions/upload-artifact@v4
        with:
          name: test-summary
          path: test-summary.md
        if: always()

      - name: 📊 Generate JaCoCo Badge
        id: jacoco
        uses: cicirello/jacoco-badge-generator@v2
        with:
          jacoco-csv-file: lsadf_test_report/target/site/jacoco-aggregate/jacoco.csv
          generate-coverage-badge: true

      - name: 🔎 Find Tests Comment
        uses: peter-evans/find-comment@v3
        id: ftc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: '<img src="https://svg.test-summary.com/dashboard.svg?'
        if: always()

      - name: 🗑️ Delete Comment
        uses: detomarco/delete-comments@1.1.0
        with:
          comment-id: ${{ steps.ftc.outputs.comment-id }}
        if: always()

      - name: ✏️ Create Comment
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body-path: 'test-summary.md'
          edit-mode: replace
        if: always()

      - name: 🔎 Find Test Coverage Comment
        uses: peter-evans/find-comment@v3
        id: ftcc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: 'Code Coverage'
        if: always()

      - name: 🗑️ Delete Comment
        uses: detomarco/delete-comments@1.1.0
        with:
          comment-id: ${{ steps.ftcc.outputs.comment-id }}
        if: always()

      - name: 🧮 Calculate Coverage Percentage
        id: coverage_calc
        run: |
          coverage_percent=$(echo "${{ steps.jacoco.outputs.coverage }} * 100" | bc -l)
          echo "percentage=${coverage_percent}" >> $GITHUB_OUTPUT


      - name: 📝 Add Coverage to PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: coverage
          message: |
            ## 📊 Code Coverage: ${{ steps.coverage_calc.outputs.coverage_percent }}%
            
            [📋 Full Coverage Report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
        if: github.event_name == 'pull_request'