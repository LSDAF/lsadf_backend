services:
  postgres:
    image: postgres:16.0-alpine
    profiles:
      - db
      - backend
    container_name: postgres
    env_file: env/env.properties
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    networks:
      - backend
    volumes:
      - ./docker-data/postgres:/var/lib/postgresql/data

  redis:
    image: redis:7.4.0-alpine
    container_name: redis
    env_file: env/env.properties
    tty: true
    command: "sh -xc 'redis-server --daemonize yes --requirepass $$REDIS_PASSWORD && redis-cli -a $$REDIS_PASSWORD config set notify-keyspace-events KEA && sleep infinity'"
    profiles:
      - db
    ports:
      - "6379:6379"
    networks:
      - backend
    volumes:
      - ./docker-data/redis_data:/data

  pgadmin:
    image: dpage/pgadmin4:8.6
    platform: linux/amd64
    container_name: pgadmin
    env_file: env/env.properties
    profiles:
      - monitoring
    environment:
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_LISTEN_PORT: 80
    volumes:
      - ./docker-data/pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    ports:
      - "7502:80"
    networks:
      - backend

  redisinsight:
    image: redis/redisinsight:latest
    container_name: redisinsight
    env_file: env/env.properties
    environment:
      RI_APP_PORT: 8001
    profiles:
      - monitoring
    networks:
      - backend
    ports:
      - "8001:8001"
    volumes:
      - ./docker-data/redisinsight_data:/data
    depends_on:
      - redis

  lsadf_backend:
    platform: linux/amd64
    env_file: env/env.properties
    build:
      context: .
      dockerfile: Dockerfile
    container_name: lsadf_backend
    profiles:
      - backend
    ports:
      - "8080:8080"
    environment:
      - SLEEP_ENABLED=true
    networks:
      - backend
    depends_on:
      - postgres

networks:
  backend:
    driver: bridge