services:
  keycloak:
    image: quay.io/keycloak/keycloak:26.0.0
    profiles:
      - db
      - backend
      - backend_dev
      - backend_admin_dev
    container_name: keycloak
    env_file: env/env.properties
    environment:
      KC_BOOTSTRAP_ADMIN_USERNAME: ${KEYCLOAK_ADMIN}
      KC_BOOTSTRAP_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_HOSTNAME_STRICT_BACKCHANNEL: false
      KC_HTTP_ENABLED: true
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HEALTH_ENABLED: true
      KC_LOG_LEVEL: info
      KC_HOSTNAME_PORT: 8081
      KC_DB: postgres
      KC_DB_URL: ${DB_URL_DOCKER}
      KC_DB_USERNAME: ${DB_USERNAME}
      KC_DB_PASSWORD: ${DB_PASSWORD}
    ports:
      - "8081:8081"
    command: "start-dev --http-port 8081"
    networks:
      - backend
    depends_on:
      - postgres

  postgres:
    image: postgres:16.0-alpine
    profiles:
      - db
      - backend
      - backend_dev
      - backend_admin_dev
    container_name: postgres
    env_file: env/env.properties
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    networks:
      - backend
    volumes:
      - ./docker/data/postgres:/var/lib/postgresql/data

  redis:
    image: redis:7.4.0-alpine
    container_name: redis
    env_file: env/env.properties
    tty: true
    command: "sh -xc 'redis-server --daemonize yes --requirepass $$REDIS_PASSWORD && redis-cli -a $$REDIS_PASSWORD config set notify-keyspace-events KEA && sleep infinity'"
    profiles:
      - db
      - backend
      - backend_dev
      - backend_admin_dev
    ports:
      - "6379:6379"
    networks:
      - backend
    volumes:
      - ./docker/data/redis_data:/data

  pgadmin:
    image: dpage/pgadmin4:8.11
    platform: linux/amd64
    container_name: pgadmin
    env_file: env/env.properties
    profiles:
      - monitoring
    environment:
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_LISTEN_PORT: 80
    volumes:
      - ./docker/data/pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    ports:
      - "7502:80"
    networks:
      - backend

  redisinsight:
    image: redis/redisinsight:latest
    container_name: redisinsight
    env_file: env/env.properties
    environment:
      RI_APP_PORT: 8001
    profiles:
      - monitoring
    networks:
      - backend
    ports:
      - "8001:8001"
    volumes:
      - ./docker/data/redisinsight_data:/data
    depends_on:
      - redis

  mailhog:
    image: mailhog/mailhog:latest
    container_name: mailhog
    profiles:
      - db
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - backend

  lsadf_backend:
    platform: linux/amd64
    env_file: env/env.properties
    image: lsadf/lsadf-api
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: lsadf_backend
    profiles:
      - backend
    ports:
      - "8080:8080"
    environment:
      - SLEEP_ENABLED=true
    networks:
      - backend
    volumes:
      - ./docker/data/lsadf_backend_data/:/app/logs
    depends_on:
      - postgres

  lsadf_backend_dev:
    platform: linux/amd64
    env_file: env/env.properties
    build:
      context: .
      dockerfile: docker/Dockerfile-dev
      args:
        module_folder: lsadf_api
    container_name: lsadf_backend_dev
    image: lsadf/lsadf-api-dev
    profiles:
      - backend_dev
    ports:
      - "8080:8080"
    environment:
      - SLEEP_ENABLED=true
    networks:
      - backend
    volumes:
      - ./docker/data/lsadf_backend_dev_data/:/app/logs
    depends_on:
      - postgres

  lsadf_admin_dev:
    platform: linux/amd64
    env_file: env/env.properties
    image: lsadf/lsadf-admin-dev
    build:
      context: .
      dockerfile: docker/Dockerfile-dev
      args:
        module_folder: lsadf_admin
    container_name: lsadf_admin_dev
    profiles:
      - backend_admin_dev
    ports:
      - "8082:8082"
    environment:
      - SLEEP_ENABLED=true
    networks:
      - backend
    volumes:
      - ./docker/data/lsadf_admin_dev_data/:/app/logs
    depends_on:
      - postgres

networks:
  backend:
    driver: bridge